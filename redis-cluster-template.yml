apiVersion: template.openshift.io/v1
kind: Template
labels:
  app: redis-cluster-demo
  template: redis-cluster-demo
message: |-
  FOR DEMO PURPOSES ONLY - NOT FOR PRODUCTION USE!! For more information about using this template, including OpenShift considerations, see https://github.com/ryanj/redis-cluster-demo/blob/master/README.md.
metadata:
  annotations:
    description: |-
      A demo example of a clustered Redis database (6 nodes); DO NOT USE IN PRODUCTION!
    iconClass: icon-redis
    openshift.io/display-name: Redis-Cluster
    openshift.io/documentation-url: https://github.com/ryanj/redisconf-2018
    openshift.io/long-description: An example clustered Redis database; not for use in production
    openshift.io/provider-display-name: RyanJ
    openshift.io/support-url: https://quay.io/repository/ryanj/redisconf-2018
    tags: quickstart,redis
    template.openshift.io/bindable: "false"
  creationTimestamp: 2018-04-24T19:44:33Z
  name: redis-cluster-demo
objects:
- apiVersion: v1
  kind: ConfigMap
  metadata:
    name: redis-cluster
    labels:
      app: redis-cluster
  data:
    redis.conf: |+
      cluster-enabled yes
      cluster-require-full-coverage no
      cluster-node-timeout 15000
      cluster-config-file /data/nodes.conf
      cluster-migration-barrier 1
      appendonly yes
      protected-mode no
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      service.alpha.kubernetes.io/tolerate-unready-endpoints: "false"
    name: redis-cluster
    labels:
      app: redis-cluster
  spec:
    ports:
    - port: 6379
      targetPort: 6379
      name: client
    - port: 16379
      targetPort: 16379
      name: gossip
    clusterIP: None
    selector:
      app: redis-cluster
- apiVersion: apps/v1beta1
  kind: StatefulSet
  metadata:
    name: redis-cluster
    labels:
      app: redis-cluster
  spec:
    serviceName: redis-cluster
    replicas: 6
    template:
      metadata:
        labels:
          app: redis-cluster
      spec:
        containers:
        - name: redis-cluster
          image: quay.io/ryanj/redis-cluster-demo:v1
          ports:
          - containerPort: 6379
            name: client
          - containerPort: 16379
            name: gossip
          command: ["redis-server"]
          args: ["/conf/redis.conf"]
          readinessProbe:
            exec:
              command:
              - sh
              - -c
              - "redis-cli -h $(hostname) ping"
            initialDelaySeconds: 15
            timeoutSeconds: 5
          livenessProbe:
            exec:
              command:
              - sh
              - -c
              - "redis-cli -h $(hostname) ping"
            initialDelaySeconds: 20
            periodSeconds: 3
          volumeMounts:
          - name: conf
            mountPath: /conf
            readOnly: false
          - name: data
            mountPath: /data
            readOnly: false
        volumes:
        - name: conf
          configMap:
            name: redis-cluster
            items: 
            - key: redis.conf
              path: redis.conf
    volumeClaimTemplates:
    - metadata:
        name: data
        labels:
          name: redis-cluster
        annotations:
          volume.alpha.kubernetes.io/storage-class: anything
      spec:
        accessModes: [ "ReadWriteOnce" ]
        resources:
          requests:
            storage: 100Mi
